<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用SelectCase来做不定数量的channel选择</title>
      <link href="/2016/05/10/select-case/"/>
      <url>/2016/05/10/select-case/</url>
      
        <content type="html"><![CDATA[<blockquote><p>func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool)</p></blockquote><p><strong>Args</strong></p><ul><li>cases []SelectCase 使用此参数之前要设置SelectCase，告诉Select目的。</li></ul><p><strong>Return</strong></p><ul><li>chosen int 返回选择的channel序号</li><li>recv Value 返回信道的值，类型是reflect.Value</li><li>recvOk bool 返回false，如果信道被关闭。</li></ul><figure class="highlight golang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"reflect"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> n <span class="keyword">int</span> = <span class="number">1</span></span><br><span class="line">    <span class="keyword">var</span> chs = <span class="built_in">make</span>([]<span class="keyword">chan</span> <span class="keyword">int</span>, n)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">var</span> worker = <span class="function"><span class="keyword">func</span><span class="params">(n <span class="keyword">int</span>, c <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">            c&lt;-i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">close</span>(c)</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//不定数量的channel数组</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        chs[i]=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line">        <span class="keyword">go</span> worker(<span class="number">3</span>+i, chs[i])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> selectCase = <span class="built_in">make</span>([]reflect.SelectCase, n)</span><br><span class="line">    <span class="comment">//将channel绑定到SelectCase</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;n;i++&#123;</span><br><span class="line">        selectCase[i].Dir = reflect.SelectRecv <span class="comment">//设置信道是接收,可以为下面值之一</span></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        const (</span></span><br><span class="line"><span class="comment">            SelectSend    SelectDir // case Chan &lt;- Send</span></span><br><span class="line"><span class="comment">            SelectRecv              // case &lt;-Chan:</span></span><br><span class="line"><span class="comment">            SelectDefault           // default</span></span><br><span class="line"><span class="comment">        )</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        selectCase[i].Chan = reflect.ValueOf(chs[i])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    numDone := <span class="number">0</span></span><br><span class="line">    <span class="comment">//从所有channel中取出最先到达的N个值</span></span><br><span class="line">    <span class="keyword">for</span> numDone &lt; n &#123;</span><br><span class="line">        chosen, recv, recvOk := reflect.Select(selectCase)</span><br><span class="line">        <span class="keyword">if</span> recvOk &#123;</span><br><span class="line">            fmt.Println(chosen, recv.Int(), recvOk)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            numDone++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下OpenVPN使用技巧</title>
      <link href="/2016/05/02/openvpn-tips/"/>
      <url>/2016/05/02/openvpn-tips/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近入职公司需要用到OpenVPN连接工作网络，因为程序员都是懒惰的，所以折腾发现了一些技巧可以提高效率（其实是少点几下鼠标…），废话不多说，下面开始正题。</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>这个没什么说的，官网地址下载安装即可，记得用管理员权限运行。<br><a href="https://openvpn.net/index.php/open-source/downloads.html" target="_blank" rel="noopener">https://openvpn.net/index.php/open-source/downloads.html</a></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>公司采用公钥认证，所以把公司给你的配置文件统统拷贝到 C:\Program Files\OpenVPN\config 目录下，其中包括证书，key，配置文件，如果有多个VPN网络记得改动文件名，然后也得修改OpenVPN配置文件中的文件名，这个网上有一大堆教程。<br>这时候你打开OpenVPN-GUI应该就可以连接到公司内网了。</p><h2 id="免密码"><a href="#免密码" class="headerlink" title="免密码"></a>免密码</h2><p>公司的私钥使用了密码进行加密，所以连接时会提示输入密码，这个当然不能忍，首先新建一个<code>key.txt</code>，里面贴上你的密钥，然后打开你的OpenVPN配置文件，就是前面拷贝进config目录以<code>.ovpn</code>为后缀的文件，在最后添加一行<code>askpass key.txt</code>，保存重新打开客户端连接就不会提示输入密钥了。</p><h2 id="同时使用多个连接"><a href="#同时使用多个连接" class="headerlink" title="同时使用多个连接"></a>同时使用多个连接</h2><ul><li>安装完默认只有一个虚拟网卡，如果需要同时连接多个VPN需要添加多个TAP虚拟网卡，你想要多少个网络就要添加多少个网卡，进入TAP网络目录，默认是C:\Program Files\TAP-Windows，不一样的自己找到对应目录，打开cmd运行命令<code>bin\tapinstall.exe install driver\OemVista.inf tap0901</code>，最后的tap0901对应于driver目录下的文件名，不一致自行修改。最后打开系统网络连接看看是否有两个TAP虚拟网卡，有即操作成功了，然后可以重命名网卡名称，如<code>TAP01</code>，没有自己检查下是否权限问题。这时候就可以测试下多个网络连接了。</li><li>修改VPN的配置文件，找到<code>dev-node</code>这一行，给每个网络分配好网卡，不能有冲突，如A.ovpn中为<code>dev-node TAP01</code>，B.ovpn中为<code>dev-node TAP02</code></li></ul><h2 id="双击自动连接"><a href="#双击自动连接" class="headerlink" title="双击自动连接"></a>双击自动连接</h2><p>打开OpenVPN快捷方式属性，在目标一栏最后加上<code>--connect A.ovpn</code>，可以指定多个配置文件同时拨号，如<code>--connect A.ovpn --connect B.ovpn</code>，注意和前面的路径有个空格，确定以后双击即可直接连接上两个VPN，如果还想开机启动的把快捷方式丢到启动目录吧。</p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> Tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OpenVPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2016/04/28/hello-world/"/>
      <url>/2016/04/28/hello-world/</url>
      
        <content type="html"><![CDATA[<p>初次接触Hexo,用Github免费托管，Markdown写作，程序员必备，以后就用来记录点点滴滴了。来个猫咪老师的萌照！ :)</p><p><img src="/images/avatar.jpg" alt="Cat"></p>]]></content>
      
      
      <categories>
          
          <category> Programming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HelloWorld </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
